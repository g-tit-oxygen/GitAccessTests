<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="add-watermark-pdf-output">
  <title>Adding a Watermark to PDF Output</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>DITA<indexterm>Output<indexterm>PDF output customization<indexterm>Add
                watermark</indexterm></indexterm></indexterm></indexterm>
        <indexterm>DITA<indexterm>PDF output customization<indexterm>Add
            watermark</indexterm></indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <taskbody>
    <context>
      <p>To add a watermark to the PDF output of a <xref keyref="glossentry_ditamap"><term>DITA
            map</term></xref> transformation, create a DITA-OT customization directory and use it
        from a <uicontrol>DITA Map to PDF</uicontrol> transformation scenario, as in the following
        procedure:</p>
      <ol>
        <li>Copy the entire directory: <filepath><term keyref="glossentry_dita_ot_dir"
            />\plugins\org.dita.pdf2\Customization</filepath> to another location (for instance,
            <filepath>C:\Customization</filepath>).</li>
        <li>Copy your watermark image (for example, <filepath>watermark.png</filepath>) to:
            <filepath>C:\Customization\common\artwork\watermark.png</filepath>.</li>
        <li>Rename the <filepath>C:\Customization\catalog.xml.orig</filepath> file to:
            <filepath>C:\Customization\catalog.xml</filepath>.</li>
        <li>Open the <filepath>catalog.xml</filepath> in <ph keyref="product"/> and <i>uncomment</i>
          this line:
            <codeblock outputclass="language-xml">&lt;!--uri name="cfg:fo/xsl/custom.xsl" uri="fo/xsl/custom.xsl"/--&gt; </codeblock><p>The
            uncommented line should look like
          this:</p><codeblock outputclass="language-xml">&lt;uri name="cfg:fo/xsl/custom.xsl" uri="fo/xsl/custom.xsl"/></codeblock></li>
        <li>Rename the file: <filepath>C:\Customization\fo\xsl\custom.xsl.orig</filepath> to:
            <filepath>C:\Customization\fo\xsl\custom.xsl</filepath></li>
        <li>Open the <filepath>C:\Customization\fo\xsl\custom.xsl</filepath> file in <ph
            keyref="product"/> to overwrite two XSLT templates:<ul>
            <li>The first template is located in the XSLT stylesheet <filepath><term
                  keyref="glossentry_dita_ot_dir"
                />\plugins\org.dita.pdf2\xsl\fo\static-content.xsl</filepath> and we override it
              specifying a watermark image for every page in the PDF content, using a
                <term>block-container</term> element that references the watermark image
              file:<codeblock outputclass="language-xml">&lt;fo:static-content flow-name="odd-body-header">
       &lt;fo:block-container absolute-position="absolute"
          top="-2cm" left="-3cm" width="21cm" height="29.7cm"
          background-image="{concat($artworkPrefix, 
'/Customization/OpenTopic/common/artwork/watermark.png')}">
         &lt;fo:block/>
       &lt;/fo:block-container>
      &lt;fo:block xsl:use-attribute-sets="__body__odd__header">
          &lt;xsl:call-template name="insertVariable">
              &lt;xsl:with-param name="theVariableID" select="'Body odd header'"/>
              &lt;xsl:with-param name="theParameters">
                 &lt;prodname>
                     &lt;xsl:value-of select="$productName"/>
                 &lt;/prodname>
                 &lt;heading>
               &lt;fo:inline xsl:use-attribute-sets="__body__odd__header__heading">
                      &lt;fo:retrieve-marker retrieve-class-name="current-header"/>
               &lt;/fo:inline>
                &lt;/heading>
               &lt;pagenum>
             &lt;fo:inline xsl:use-attribute-sets="__body__odd__header__pagenum">
                    &lt;fo:page-number/>
             &lt;/fo:inline>
           &lt;/pagenum>
        &lt;/xsl:with-param>
      &lt;/xsl:call-template>
    &lt;/fo:block>
  &lt;/fo:static-content>
        
&lt;/xsl:template></codeblock></li>
            <li>The second template that we override is located in the XSLT stylesheet
                  <filepath><term keyref="glossentry_dita_ot_dir"
                />\plugins\org.dita.pdf2\xsl\fo\commons.xsl</filepath> and is used for styling the
              first page of the output. We also override it by copying the original template content
              in our <filepath>custom.xsl</filepath> and adding the <codeph>block-container</codeph>
              element that references the watermark image
              file:<codeblock outputclass="language-xml">&lt;xsl:template name="createFrontMatter_1.0">
      &lt;fo:page-sequence master-reference="front-matter" 
xsl:use-attribute-sets="__force__page__count">
          &lt;xsl:call-template name="insertFrontMatterStaticContents"/>
          &lt;fo:flow flow-name="xsl-region-body">
              &lt;fo:block-container absolute-position="absolute"
                  top="-2cm" left="-3cm" width="21cm" height="29.7cm"
                  background-image="{concat($artworkPrefix, 
'/Customization/OpenTopic/common/artwork/watermark.png')}">
                  &lt;fo:block/>
              &lt;/fo:block-container>
  &lt;fo:block xsl:use-attribute-sets="__frontmatter">
       &lt;!-- set the title -->
    &lt;fo:block xsl:use-attribute-sets="__frontmatter__title">
     &lt;xsl:choose>
      &lt;xsl:when test="$map/*[contains(@class,' topic/title ')][1]">
    &lt;xsl:apply-templates select="$map/*[contains(@class,' topic/title ')][1]"/>
      &lt;/xsl:when>
      &lt;xsl:when test="$map//*[contains(@class,' bookmap/mainbooktitle ')][1]">
    &lt;xsl:apply-templates select="$map//*[contains
(@class,' bookmap/mainbooktitle ')][1]"/>
          &lt;/xsl:when>
          &lt;xsl:when test="//*[contains(@class, ' map/map ')]/@title">
              &lt;xsl:value-of select="//*[contains(@class, ' map/map ')]/@title"/>
          &lt;/xsl:when>
            &lt;xsl:otherwise>
             &lt;xsl:value-of select="/descendant::*[contains
(@class, ' topic/topic ')][1]/*[contains(@class, ' topic/title ')]"/>
            &lt;/xsl:otherwise>
      &lt;/xsl:choose>
    &lt;/fo:block>
                    
   &lt;!-- set the subtitle -->
   &lt;xsl:apply-templates select="$map//*[contains
(@class,' bookmap/booktitlealt ')]"/>
                    
      &lt;fo:block xsl:use-attribute-sets="__frontmatter__owner">
         &lt;xsl:apply-templates select="$map//*[contains
(@class,' bookmap/bookmeta ')]"/>
      &lt;/fo:block>
                    
      &lt;/fo:block>
                
   &lt;!--&lt;xsl:call-template name="createPreface"/>-->
                
      &lt;/fo:flow>
        &lt;/fo:page-sequence>
        &lt;xsl:if test="not($retain-bookmap-order)">
            &lt;xsl:call-template name="createNotices"/>
        &lt;/xsl:if>
    &lt;/xsl:template></codeblock></li>
          </ul></li>
        <li>Edit your <uicontrol>DITA Map PDF</uicontrol> transformation scenario. In the
            <uicontrol>Parameters</uicontrol> tab, set the <parmname>customization.dir</parmname>
          parameter to <filepath>C:\Customization</filepath>.</li>
      </ol>
    </context>
  </taskbody>
  <related-links product="author editor authorEclipse editorEclipse">
    <linklist>
      <title>Related Information:</title>
      <link href="add-watermark-xhtml-output.dita#add-watermark-xhtml-output"/>
    </linklist>
  </related-links>
</task>
