<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd">
<topic id="open-save-Unicode-documents">
  <title>Opening and Saving Documents with Unsupported Characters</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Unicode support<indexterm>Unsupported characters</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p>When loading documents, <ph product="editor author developer"><ph keyref="product"/> reads
        the document prolog to determine the specified encoding type.</ph>
      <ph product="editorEclipse authorEclipse developerEclipse"><ph keyref="product"/> receives the
        encoding of the document from the Eclipse platform.</ph> This encoding is then used to
      instruct the Java Encoder to load support for and to save the document using the specified
      code chart. <ph product="editor author developer">When the encoding type cannot be determined,
          <ph keyref="product"/> displays the <uicontrol>Available Java Encodings</uicontrol> dialog
        box that provides a list of all encodings supported by the Java platform.</ph></p>
    <p product="editor author developer">If the opened document contains an unsupported character,
        <ph keyref="product"/> applies <xref
        href="preferences-encoding.dita#preferences-encoding/encoding-errors-handling">the policy
        specified in the <uicontrol>Encoding Errors Handling</uicontrol> option</xref>. If the
      policy is set to REPORT, <ph keyref="product"/> displays an error dialog box with a message
      about the character not allowed by the encoding. If the policy is set to IGNORE, the character
      is removed from the document displayed in the editor panel. If the policy is set to REPLACE,
      the character is replaced with a standard replacement character for that encoding.</p>
    <p>While in most cases you are using UTF-8, simply changing the encoding name causes the
      application to save the file using the new encoding.</p>
    <p product="editor author developer">When saving a document edited in the
        <uicontrol>Text</uicontrol>, <uicontrol>Grid</uicontrol>, or <uicontrol>Design</uicontrol>
      modes, if it contains characters not included in the encoding declared in the document prolog,
        <ph keyref="product"/> presents a notification that you need to resolve the conflict before
      saving the document.</p>
    <p product="author editor">When saving a document edited in the <uicontrol>Author</uicontrol>
      mode, all characters that fall outside the detected encoding will be automatically converted
      to hexadecimal character entities.</p>
    <p>When a document with a UTF-16 encoding is edited and saved in <ph keyref="product"/>, the
      saved document has a byte order mark (BOM) that specifies the byte order of the document
      content. The default byte order is platform-dependent. That means that a UTF-16 document
      created on a Windows platform (where the default byte order mark is <i>UnicodeLittle</i>) has
      a different BOM than one created on a Mac OS platform (where the byte order mark is
        <i>UnicodeBig</i>). The byte order and the BOM of an existing document are preserved when
      the document is edited and saved. <ph product="editor author svnClient">This behavior can be
        changed in <ph keyref="product"/> from the <xref href="preferences-encoding.dita"
            ><uicontrol>Encoding</uicontrol> preferences page</xref>.</ph></p>
  </body>
</topic>
