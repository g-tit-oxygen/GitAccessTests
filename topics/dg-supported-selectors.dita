<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="dg-supported-selectors">
  <title>Supported CSS Selectors</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>CSS selectors</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p>The following table lists the CSS selectors that are supported in <ph keyref="product"/>:</p>
    <p>
      <simpletable frame="all" relcolwidth="1.35* 1.98* 1.0* 2.38*"
        id="dg-table-supported-selectors">
        <sthead>
          <stentry>Expression</stentry>
          <stentry>Name</stentry>
          <stentry>CSS Level</stentry>
          <stentry>Description / Example</stentry>
        </sthead>
        <strow>
          <stentry><codeph>*</codeph></stentry>
          <stentry>Universal selector</stentry>
          <stentry>CSS Level 2</stentry>
          <stentry>Matches any element </stentry>
        </strow>
        <strow>
          <stentry><codeph>E</codeph></stentry>
          <stentry>Type selector</stentry>
          <stentry>CSS Level 2</stentry>
          <stentry>Matches any <codeph>E</codeph> element (i. e. an element with the local name
              <codeph>E</codeph>)</stentry>
        </strow>
        <strow>
          <stentry><codeph>E F</codeph></stentry>
          <stentry>Descendant selector</stentry>
          <stentry>CSS Level 2</stentry>
          <stentry>Matches any <codeph>F</codeph> element that is a descendant of an
              <codeph>E</codeph> element. </stentry>
        </strow>
        <strow>
          <stentry><codeph>E &gt; F</codeph></stentry>
          <stentry>Child selectors</stentry>
          <stentry>CSS Level 2</stentry>
          <stentry>Matches any <codeph>F</codeph> element that is a child of an element
              <codeph>E</codeph>. </stentry>
        </strow>
        <strow>
          <stentry><codeph>E:lang(c)</codeph>
          </stentry>
          <stentry>Language pseudo-class </stentry>
          <stentry>CSS Level 2</stentry>
          <stentry>Matches element of type <codeph>E</codeph> if it is in (human) language
              <codeph>c</codeph> (the document language specifies how language is determined).
          </stentry>
        </strow>
        <strow>
          <stentry><codeph>E + F</codeph></stentry>
          <stentry>Adjacent selector</stentry>
          <stentry>CSS Level 2</stentry>
          <stentry>Matches any <codeph>F</codeph> element immediately preceded by a sibling element
              <codeph>E</codeph>. </stentry>
        </strow>
        <strow>
          <stentry><codeph>E ~ F</codeph></stentry>
          <stentry>General sibling selector</stentry>
          <stentry>CSS Level 3</stentry>
          <stentry>Matches any <codeph>F</codeph> element preceded by a sibling element
              <codeph>E</codeph>. </stentry>
        </strow>
        <strow>
          <stentry><codeph>E[foo]</codeph></stentry>
          <stentry>Attribute selector</stentry>
          <stentry>CSS Level 2</stentry>
          <stentry>Matches any <codeph>E</codeph> element with the <codeph>"foo"</codeph> attribute
            set (whatever the value). </stentry>
        </strow>
        <strow>
          <stentry><codeph>E[foo="warning"]</codeph></stentry>
          <stentry>Attribute selector with value</stentry>
          <stentry>CSS Level 2</stentry>
          <stentry>Matches any <codeph>E</codeph> element whose <codeph>"foo"</codeph> attribute
            value is exactly equal to <codeph>"warning"</codeph>. </stentry>
        </strow>
        <strow>
          <stentry><codeph>E[foo~="warning"]</codeph></stentry>
          <stentry>Attribute selector containing value</stentry>
          <stentry>CSS Level 2</stentry>
          <stentry>Matches any <codeph>E</codeph> element whose <codeph>"foo"</codeph> attribute
            value is a list of space-separated values, one of which is exactly equal to
              <codeph>"warning"</codeph>. </stentry>
        </strow>
        <strow>
          <stentry><codeph>E[lang|="en"]</codeph></stentry>
          <stentry>Attribute selector containing hyphen separated values</stentry>
          <stentry>CSS Level 2</stentry>
          <stentry>Matches any <codeph>E</codeph> element whose <codeph>"lang"</codeph> attribute
            has a hyphen-separated list of values beginning (from the left) with
              <codeph>"en"</codeph>. </stentry>
        </strow>
        <strow>
          <stentry><codeph>E:before and E:after</codeph></stentry>
          <stentry>Pseudo elements</stentry>
          <stentry>CSS Level 2</stentry>
          <stentry>The <codeph>':before'</codeph> and <codeph>':after'</codeph> pseudo-elements can
            be used to insert generated content before or after an element's content. </stentry>
        </strow>
        <strow>
          <stentry><codeph>E:before(n) and E:after(n)</codeph></stentry>
          <stentry>Pseudo elements</stentry>
          <stentry>CSS Level 3</stentry>
          <stentry>Multiple <codeph>':before(n)'</codeph> and <codeph>':after(n)'</codeph>
            pseudo-elements can be used to insert content before or after the content of an element
            (or other pseudo-element). <p>For more information, see <xref
                href="http://www.w3.org/TR/css3-content/#pseudo-elements" format="html"
                scope="external">the W3C CSS3 pseudo elements site</xref>.</p></stentry>
        </strow>
        <strow>
          <stentry><codeph>E:first-child</codeph></stentry>
          <stentry>The first-child pseudo-class</stentry>
          <stentry>CSS Level 2</stentry>
          <stentry>Matches element <codeph>E</codeph> when <codeph>E</codeph> is the first child of
            its parent. </stentry>
        </strow>
        <strow>
          <stentry><codeph>E:not(s)</codeph></stentry>
          <stentry>Negation pseudo-class</stentry>
          <stentry>CSS Level 2</stentry>
          <stentry>
            <p>An E element that does not match simple selector s.</p>
          </stentry>
        </strow>
        <strow>
          <stentry><codeph>E:has</codeph></stentry>
          <stentry>Relational pseudo-class</stentry>
          <stentry>CSS Level 4</stentry>
          <stentry>
            <p>The <codeph>:has()</codeph> relational pseudo-class is a functional pseudo-class that
              takes a relative selector as an argument.</p>
            <p>For more information, see <xref href="../topics/has-selector.dita#has-selector"
              />.</p>
          </stentry>
        </strow>
        <strow>
          <stentry><codeph>E:hover</codeph></stentry>
          <stentry>The hover pseudo-class</stentry>
          <stentry>CSS Level 2</stentry>
          <stentry>
            <p>The <codeph>:hover</codeph> pseudo-class applies while the user designates an element
              with a pointing device, but does not necessarily activate it. When moving the pointing
              device over an element, all the parent elements up to the root are taken into
              account.</p>
          </stentry>
        </strow>
        <strow>
          <stentry><codeph>E:focus</codeph></stentry>
          <stentry>The focus pseudo-class</stentry>
          <stentry>CSS Level 2</stentry>
          <stentry>
            <p>The <codeph>:focus</codeph> pseudo-class applies while an element has the focus
              (accepts keyboard input).</p>
          </stentry>
        </strow>
        <strow>
          <stentry><codeph>E:focus-within</codeph></stentry>
          <stentry>The generalized input focus pseudo-class</stentry>
          <stentry>CSS Level 4</stentry>
          <stentry>
            <p>The <codeph>:focus-within</codeph> pseudo-class applies to elements for which the
                <codeph>:focus</codeph> pseudo-class applies. Additionally, the ancestors of an
              element that matches <codeph>:focus-within</codeph> also match.</p>
          </stentry>
        </strow>
        <strow>
          <stentry><codeph>E#myid</codeph></stentry>
          <stentry>The ID selector</stentry>
          <stentry>CSS Level 2</stentry>
          <stentry>
            <p>Matches any E element with ID equal to "myid". <note type="important">Limitation: In
                  <ph keyref="product"/> the match is performed only taking into account the
                attributes with the exact name: <i>"id"</i>.</note></p>
          </stentry>
        </strow>
        <strow>
          <stentry><codeph>E[att^="val"]</codeph></stentry>
          <stentry>Substring matching attribute selector</stentry>
          <stentry>CSS Level 3</stentry>
          <stentry>An E element whose <codeph>att</codeph> attribute value begins exactly with the
            string <codeph>val</codeph>.</stentry>
        </strow>
        <strow>
          <stentry><codeph>E[att$="val"]</codeph></stentry>
          <stentry>Substring matching attribute selector</stentry>
          <stentry>CSS Level 3</stentry>
          <stentry>An E element whose <codeph>att</codeph> attribute value ends exactly with the
            string <codeph>val</codeph>.</stentry>
        </strow>
        <strow>
          <stentry><codeph>E[att*="val"]</codeph></stentry>
          <stentry>Substring matching attribute selector</stentry>
          <stentry>CSS Level 3</stentry>
          <stentry>An E element whose <codeph>att</codeph> attribute value contains the substring
              <codeph>val</codeph>.</stentry>
        </strow>
        <strow>
          <stentry><codeph>E:root</codeph></stentry>
          <stentry>Root pseudo-class</stentry>
          <stentry>CSS Level 3</stentry>
          <stentry>Matches the root element of the document. In HTML, the root element is always the
            HTML element. </stentry>
        </strow>
        <strow>
          <stentry><codeph>E:empty</codeph></stentry>
          <stentry>Empty pseudo-class</stentry>
          <stentry>CSS Level 3</stentry>
          <stentry>An E element that has no text or child elements.</stentry>
        </strow>
        <strow>
          <stentry><codeph>E:nth-child(n)</codeph></stentry>
          <stentry>The nth-child pseudo-class</stentry>
          <stentry>CSS Level 3</stentry>
          <stentry>An E element, the nth child of its parent.</stentry>
        </strow>
        <strow>
          <stentry><codeph>E:nth-last-child(n)</codeph></stentry>
          <stentry>The nth-last-child pseudo-class</stentry>
          <stentry>CSS Level 3</stentry>
          <stentry>
            <p>An E element, the nth child of its parent, counting from the last one.</p>
          </stentry>
        </strow>
        <strow>
          <stentry><codeph>E:nth-of-type(n)</codeph></stentry>
          <stentry>The nth-of-type pseudo-class</stentry>
          <stentry>CSS Level 3</stentry>
          <stentry>
            <p>An E element, the nth sibling of its type.</p>
          </stentry>
        </strow>
        <strow>
          <stentry><codeph>E:nth-last-of-type(n)</codeph></stentry>
          <stentry>The nth-last-of-type pseudo-class</stentry>
          <stentry>CSS Level 3</stentry>
          <stentry>
            <p>An E element, the nth sibling of its type, counting from the last one.</p>
          </stentry>
        </strow>
        <strow>
          <stentry><codeph>E:last-child</codeph></stentry>
          <stentry>The last-child pseudo-class</stentry>
          <stentry>CSS Level 3</stentry>
          <stentry>
            <p>An E element, last child of its parent.</p>
          </stentry>
        </strow>
        <strow>
          <stentry><codeph>E:first-of-type</codeph></stentry>
          <stentry>The first-of-type pseudo-class</stentry>
          <stentry>CSS Level 3</stentry>
          <stentry>
            <p>An E element, first sibling of its type.</p>
          </stentry>
        </strow>
        <strow>
          <stentry><codeph>E:last-of-type</codeph></stentry>
          <stentry>The last-of-type pseudo-class</stentry>
          <stentry>CSS Level 3</stentry>
          <stentry>
            <p>An E element, last sibling of its type.</p>
          </stentry>
        </strow>
        <strow>
          <stentry><codeph>E:only-child</codeph></stentry>
          <stentry>The only-child pseudo-class</stentry>
          <stentry>CSS Level 3</stentry>
          <stentry>
            <p>An E element, only child of its parent.</p>
          </stentry>
        </strow>
        <strow>
          <stentry><codeph>E:only-of-type</codeph></stentry>
          <stentry>The only-of-type pseudo-class</stentry>
          <stentry>CSS Level 3</stentry>
          <stentry>
            <p>An E element, only sibling of its type.</p>
          </stentry>
        </strow>
        <strow>
          <stentry><codeph>ns|E</codeph></stentry>
          <stentry>Element namespace selector</stentry>
          <stentry>CSS Level 3</stentry>
          <stentry>
            <p>An element that has the local name E and the namespace given by the prefix
                <codeph>ns</codeph>. The namespace prefix can be bound to a URI by the
              at-rule:<codeblock outputclass="language-css">@namespace ns "http://some_namespace_uri";</codeblock>See
                <xref href="../topics/dg-namespace-selectors.dita"/>.</p>
          </stentry>
        </strow>
        <strow>
          <stentry><codeph>E!>F</codeph></stentry>
          <stentry>The subject selector</stentry>
          <stentry>CSS Level 4 (experimental)</stentry>
          <stentry>
            <p>An element that has the local name E and has a child F. See <xref
                href="../topics/dg-subject-selector.dita"/>.</p>
          </stentry>
        </strow>
      </simpletable>
    </p>
  </body>
</topic>
