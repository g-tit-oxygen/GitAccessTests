<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="webhelp_responsive_customization">
  <title>WebHelp Responsive Customization Methods</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>WebHelp Responsive system<indexterm>Customization methods</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
    <body>
    <p>There are several methods that you can use to customize your WebHelp Responsive output. This
      topic provides information on each of the methods and highlights its advantages so that you
      can choose the best possible method based upon your needs.</p>
    <section id="section_placeholders_usage">
      <title>Insert Custom XHTML Fragments in Predefined Placeholders</title>
      <p>The WebHelp Responsive template contains a series of component placeholders. Some of these
        placeholders are left empty in the default output configurations, but you can use them to
        display custom content. This method is recommended if you want to use an existing skin and
        simply make some minor changes or additions in certain locations within the final
        output.</p>
      <sectiondiv><b>Advantages:</b><p>
          <ul>
            <li>This method is very easy, since the fragments for the placeholders can be specified
              in the transformation scenario.</li>
            <li>Advanced knowledge of CSS styling is not required for this method.</li>
          </ul>
        </p></sectiondiv>
      <p>Each such placeholder has an associated parameter in the transformation scenario
          <uicontrol>Parameters</uicontrol> tab. These predefined empty placeholder parameters are
        illustrated and described below:</p>
      <p>
        <fig>
          <title>Predefined Placeholders Diagram</title>
          <image href="../img/webhelp_parameters_list.png" placement="inline"/>
        </fig>
      </p>
      <p>Each of these parameters can hold either an XHTML fragment or a path to a file that
        contains a well-formed XHTML fragment:<dl>
          <dlentry id="webhelp-fragment-head">
            <dt>1- <ph
                conkeyref="reusables-webhelp-output-parameters/ph_webhelp_fragment_head"
              /></dt>
            <dd><ph
                conkeyref="reusables-webhelp-output-parameters/def_webhelp_fragment_head"
              /></dd>
          </dlentry>
          <dlentry>
            <dt>2- <ph
                conkeyref="reusables-webhelp-output-parameters/ph_webhelp_fragment_before_body"
              /></dt>
            <dd><ph
                conkeyref="reusables-webhelp-output-parameters/def_webhelp_fragment_before_body"
              /></dd>
          </dlentry>
          <dlentry>
            <dt>3- <ph
                conkeyref="reusables-webhelp-output-parameters/ph_webhelp_fragment_before_logo_and_title"
              /></dt>
            <dd><ph
                conkeyref="reusables-webhelp-output-parameters/def_webhelp_fragment_before_logo_and_title"
              /></dd>
          </dlentry>
          <dlentry>
            <dt>4- <ph
                conkeyref="reusables-webhelp-output-parameters/ph_webhelp_fragment_after_logo_and_title"
              /></dt>
            <dd><ph
                conkeyref="reusables-webhelp-output-parameters/def_webhelp_fragment_after_logo_and_title"
              /></dd>
          </dlentry>
          <dlentry>
            <dt>5- <ph
                conkeyref="reusables-webhelp-output-parameters/ph_webhelp_fragment_before_top_menu"
              /></dt>
            <dd><ph
                conkeyref="reusables-webhelp-output-parameters/def_webhelp_fragment_before_top_menu"
              /></dd>
          </dlentry>
          <dlentry>
            <dt>6- <ph
                conkeyref="reusables-webhelp-output-parameters/ph_webhelp_fragment_after_top_menu"
              /></dt>
            <dd><ph
                conkeyref="reusables-webhelp-output-parameters/def_webhelp_fragment_after_top_menu"
              /></dd>
          </dlentry>
          <dlentry>
            <dt>7- <ph
                conkeyref="reusables-webhelp-output-parameters/ph_webhelp_fragment_before_main_page_search"
              /></dt>
            <dd><ph
                conkeyref="reusables-webhelp-output-parameters/def_webhelp_fragment_before_main_page_search"
              /></dd>
          </dlentry>
          <dlentry>
            <dt>8- <ph
                conkeyref="reusables-webhelp-output-parameters/ph_webhelp_fragment_welcome"
              /></dt>
            <dd><ph
                conkeyref="reusables-webhelp-output-parameters/def_webhelp_fragment_welcome"
              /></dd>
          </dlentry>
          <dlentry>
            <dt>9- <ph
                conkeyref="reusables-webhelp-output-parameters/ph_webhelp_fragment_after_main_page_search"
              /></dt>
            <dd><ph
                conkeyref="reusables-webhelp-output-parameters/def_webhelp_fragment_after_main_page_search"
              /></dd>
          </dlentry>
          <dlentry>
            <dt>10- <ph
                conkeyref="reusables-webhelp-output-parameters/ph_webhelp_fragment_before_toc_or_tiles"
              /></dt>
            <dd><ph
                conkeyref="reusables-webhelp-output-parameters/def_webhelp_fragment_before_toc_or_tiles"
              /></dd>
          </dlentry>
          <dlentry>
            <dt>11- <ph
                conkeyref="reusables-webhelp-output-parameters/ph_webhelp_fragment_after_toc_or_tiles"
              /></dt>
            <dd><ph
                conkeyref="reusables-webhelp-output-parameters/def_webhelp_fragment_after_toc_or_tiles"
              /></dd>
          </dlentry>
          <dlentry>
            <dt>12- <ph
                conkeyref="reusables-webhelp-output-parameters/ph_webhelp_fragment_footer"
              /></dt>
            <dd><ph
                conkeyref="reusables-webhelp-output-parameters/def_webhelp_fragment_footer"
              /></dd>
          </dlentry>
          <dlentry>
            <dt>13- <ph
                conkeyref="reusables-webhelp-output-parameters/ph_webhelp_fragment_after_body"
              /></dt>
            <dd><ph
                conkeyref="reusables-webhelp-output-parameters/def_webhelp_fragment_after_body"
              /></dd>
          </dlentry>
        </dl></p>
      <sectiondiv><b>EXAMPLE:</b></sectiondiv>
      <p>To insert a message above the search field component in the main page of the output, follow
        this procedure:</p>
      <p>
        <ol>
          <li>Edit the <b>WebHelp Responsive</b> transformation scenario.</li>
          <li>Go to <uicontrol>Parameters</uicontrol> tab and find the parameter associated with the
            place holder that you want to use. In this case, it is called
              <codeph>webhelp.fragment.welcome</codeph>.</li>
          <li>Edit the parameter. Depending on the size of the content you want to add, you can
            insert one of the following:<ul>
              <li>A small well-formed XHTML fragment, such as: <codeph>&lt;i>Welcome to our user
                  guide&lt;/i></codeph>.</li>
              <li>A path to a file that contains well-formed XHTML content.</li>
            </ul></li>
        </ol>
      </p>
    </section>
    <section id="customizing_webhelp_output_with_a_custom_css">
      <title>Customize WebHelp Output with a Custom CSS</title>
      <p>This method is recommended if you just want to adapt an existing skin (that is very close
        to what you need) and only need to change the styling of the final output. For example, this
        might be the case if you simply want to change a color, or adjust some of the margins or
        paddings of certain components.</p>
      <sectiondiv><b>Advantages:</b><p>
          <ul>
            <li>This method could be used as a quick and easy way to make small styling
              changes.</li>
            <li>The custom CSS can be distributed with your project and shared with other members of
              your team.</li>
            <li>This method can be used for advanced and precise styling.  </li>
          </ul>
        </p></sectiondiv>
      <sectiondiv><b>Additional Notes:</b><p>
          <ul>
            <li>The fonts, images, and other resources must be stored in a remote server
              location.</li>
            <li>This type of customization will not appear in the <codeph>Templates</codeph> tab of
              the transformation scenario. Instead, the custom CSS needs to be set as a parameter of
              an existing transformation scenario.</li>
          </ul>
        </p></sectiondiv>
      <p>To set a custom CSS to a transformation scenario:</p>
      <ol id="ul_ux5_4pl_qv">
        <li>Edit the <b>WebHelp Responsive</b> transformation scenario.</li>
        <li>Open the <uicontrol>Parameters</uicontrol> tab.</li>
        <li><ph
            conkeyref="reusable-webhelp-customizing/DITA-parameters-ph"
          /> Also, if your customization CSS requires additional resources, you can copy them to the
          generated output by specifying the <xref
            href="wh-responsive-output.dita#wh-responsive-output/wh_custom_resources"
              ><i>webhelp.custom.resources</i> parameter</xref>.</li>
      </ol>
      <p>If you are using DITA, you could also override the default XSLT templates that are used for
        WebHelp transformations by using some extension points. For information about this method,
        see <xref href="whr-override-xslt-processing.dita#whr-override-xslt-processing"/>.</p>
    </section>
    <section id="section_create_whr_skin">
      <title>Create or Customize a WebHelp Responsive Skin</title>
      <p>This method is recommended if you want a design that is not similar to any of the
        predefined skins, or if you want to make a lot of changes to one of the existing skins. This
        method is also useful if you want to distribute additional resources (such as fonts and
        images) together with a custom CSS.</p>
      <sectiondiv><b>Advantages:</b><p>
          <ul id="ul_ttt_qrl_qv">
            <li>The customized skin will be available in the <uicontrol>Templates</uicontrol> tab of
              the transformation scenario.</li>
            <li>The resources are encapsulated into the <filepath>skin</filepath> directory and can
              be shared with other team members, along with a custom CSS file.</li>
          </ul>
        </p></sectiondiv>
      <sectiondiv><b>Additional Notes:</b><p>
          <ul>
            <li>This method requires access to the installation folder, or the use of an external
                DITA-OT engine (with the <xref
                href="using-the-webhelp-plugin.dita#using-the-webhelp-plugin">WebHelp plugin</xref>
              installed).</li>
          </ul>
        </p></sectiondiv>
      <p>To create a new WebHelp Responsive skin, follow this procedure:<ol>
          <li>Locate the following folder in your DITA-OT directory (<term
              keyref="glossentry_dita_ot_dir"
            />):<codeblock outputclass="language-ini"><term keyref="glossentry_dita_ot_dir"/>/plugins/com.oxygenxml.webhelp.responsive/templates/dita/bootstrap/variants/</codeblock></li>
          <li>Here you can see some subdirectories corresponding to different variants for the same
            template. For instance, the default directories are <filepath>tiles</filepath> and
              <filepath>tree</filepath>.</li>
          <li>In each of these variants, you will find a directory for each of the skins (for
            example, the default skins and their corresponding directories are: <i>flowers</i>,
              <i>green</i>, <i>light</i>, <i>mechano</i>, <i>orange</i>, etc.) </li>
          <li>Duplicate one of the skin folders and rename it to whatever you want your new skin to
            be identified as.</li>
          <li>Edit the <codeph>skin.css</codeph> file and customize it the way you want. If your
            customization of the CSS file requires additional resources (such as images, fonts, or
            other CSS files), they need to be placed in the <filepath>resources</filepath> folder at
            the same level with the <filepath>skin.css</filepath> file.<p><b>Result:</b> Your new
              skin should now be included in the list of skins in the
                <uicontrol>Templates</uicontrol> tab of the transformation scenario.</p></li>
        </ol></p>
      <note type="tip">During development, you may want to regularly test your customization. To
        shorten the publishing time of your tests, use a small set of test files (you could use one
        of the <ph keyref="product"/> sample projects). Also, you can use your web browser CSS
        inspector tool to lookup the CSS classes you want to modify.</note>
    </section>
    <section id="section_zjl_5sl_qv">
      <title>Create a New WebHelp Responsive Template</title>
      <p>This method can be used when you need to make significant structural changes to the WebHelp
        output. For example, if you want to move some components to other positions, or if you want
        to use a different responsive front-end <term>framework</term> than the default <xref
          href="http://getbootstrap.com/" format="html" scope="external"><term>Bootstrap
            framework</term></xref> (for instance, if you want to switch to <xref
          href="http://foundation.zurb.com/" format="html" scope="external"><term>ZURB
            Foundation</term></xref>).</p>
      <sectiondiv><b>Advantages:</b><p>
          <ul>
            <li>This method allows you to fully customize the output.</li>
            <li>This method allows you to <xref
                href="webhelp_template_pages.dita#webhelp_template_pages">change the structure of
                the generated HTML files</xref>.</li>
            <li>You can <xref href="#webhelp_responsive_customization/section_create_whr_skin"
                format="dita">create your own skins</xref> for the new template.</li>
          </ul>
        </p></sectiondiv>
      <sectiondiv><b>Additional Notes:</b><p>
          <ul>
            <li>This method requires access to the installation folder, or the use of an external
                DITA-OT engine (with the <xref
                href="using-the-webhelp-plugin.dita#using-the-webhelp-plugin">WebHelp plugin</xref>
              installed).</li>
          </ul>
        </p></sectiondiv>
      <p>To create a new WebHelp Responsive template, follow these steps:<ol>
          <li>Locate the following folder in your DITA-OT directory (<term
              keyref="glossentry_dita_ot_dir"
            />):<codeblock outputclass="language-ini"><term keyref="glossentry_dita_ot_dir"/>/plugins/com.oxygenxml.webhelp.responsive/templates/dita/</codeblock></li>
          <li>Duplicate the <filepath>bootstrap</filepath> folder and rename it to whatever you want
            your new template to be identified as (for example,
            <filepath>myTemplate</filepath>).</li>
          <li>Customize the structure of the new template according to your needs. For example, if
            you only want to keep one of the template variants, open the
              <filepath>myTemplate/variants</filepath> folder and delete all of its subdirectories,
            except for that one (for instance, the <filepath>tiles</filepath> directory). Keep in
            mind that the structure of the template directory is important. The names of folders at
            certain levels correspond to the names of templates and skins, while components and
            resources are defined and referenced in certain files or folders at specific locations
            within the directory structure. For more information, see <xref
              href="webhelp_template_resources.dita#webhelp_template_resources"/>.</li>
          <li>You can also customize the structure of the skins within the template variants. For
            example, if you only want to keep one of the skins in the <filepath>tiles</filepath>
            variant, open the <filepath>myTemplate/variants/tiles</filepath> folder and delete all
            of its subdirectory skins, except for that one (for instance, the
              <filepath>light</filepath> directory).</li>
          <li>Edit the <codeph>skin.css</codeph> file that is located in the skin directory (for
            example, <filepath>myTemplate/variants/tiles/light</filepath>) and customize it the way
            you want. If your customization of the CSS file requires additional resources (such as
            images, fonts, or other CSS files), they need to be placed in the
              <filepath>resources</filepath> folder at the same level with the
              <filepath>skin.css</filepath> file.<p><b>Result:</b> Your new templates and skins
              should now be included in the <uicontrol>Templates</uicontrol> tab of the
              transformation scenario.</p></li>
        </ol><note type="tip">During development you regularly need to test your customization. To
          shorten the publishing time of your test, use a small project (you could use one of the
            <ph keyref="product"/> sample projects). Also, you can use your web browser CSS
          inspector tool to lookup the CSS classes you want to modify.</note>For more information
        about WebHelp Responsive templates, see the <xref
          href="webhelp_templates_mechanism.dita#webhelp_templates_mechanism"/> section.</p>
    </section>
  </body>
</topic>
