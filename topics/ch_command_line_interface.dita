<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="ch_command_line_interface">
  <title>Command Line Interface</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Processing PDF Chemistry from command line</indexterm>
        <indexterm>Command line arguments</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p>To process a document in a command line interface, use:</p>
    <codeblock outputclass="language-ini">chemistry -in my_file.html -out my_file.pdf</codeblock>
    <p>You may specify one or more CSS files to be used. If the document is an HTML document, it may
      reference other stylesheets, or embed styles using the <codeph>style</codeph>element. The
      command line CSS files take precedence over files referenced from the document.:</p>
    <codeblock outputclass="language-ini">chemistry -in my_file.html -out my_file.pdf -css style1.css style2.css</codeblock>
    <section id="section_i4y_j1b_wz">
      <title>Required Parameters</title>
      <p>
        <dl>
          <dlentry>
            <dt>-in</dt>
            <dd>The input XML file in URI or File syntax.
              <codeblock outputclass="language-ini">-in http://my.example.com/css/printing.css</codeblock><codeblock outputclass="language-ini">-in C:\my.folder\css\printing.css</codeblock></dd>
          </dlentry>
          <dlentry>
            <dt>-out</dt>
            <dd>The output PDF file in File syntax.
              <codeblock outputclass="language-ini">-out C:\publishing\my_file.pdf</codeblock></dd>
          </dlentry>
        </dl>
      </p>
    </section>
    <section id="section_mbq_r1b_wz">
      <title>Optional Parameters</title>
     <p>
      <dl>
        <dlentry>
          <dt>-v</dt>
          <dd>Shows the version of the processor.</dd>
        </dlentry>
        <dlentry>
          <dt>-help</dt>
          <dd>Prints the usage information.</dd>
        </dlentry>
        <dlentry>
          <dt>-css</dt>
          <dd>A list of CSS files, in URI or File syntax, separated by spaces.
              <codeblock outputclass="language-ini">-css http://my.example.com/css/pages.css http://my.example.com/css/fonts-and-colors.css </codeblock>If
              you want to process an HTML document, this parameter is optional. If you specify a
              CSS, it is considered to be more important than the ones referenced from the document
              (for example, using the <codeph>link</codeph> element or the
                <codeph>xml-stylesheet</codeph> processing instruction).</dd>
        </dlentry>
        <dlentry>
          <dt>-catalogs</dt>
          <dd>The path to one or more XML catalogs, in URI or File syntax. You can separate the
            catalogs by using the ":" or ";" symbols. You can use a catalog to solve DTD or Schema
            references to local files.</dd>
        </dlentry>
        <dlentry>
          <dt>-catalog-prefer</dt>
          <dd>Catalog preference mode. Possible values are: 'system' or 'public'. Default is
              'public'.</dd>
        </dlentry>
        <dlentry>
          <dt>-image-resolution</dt>
          <dd>The resolution (in DPI) of the raster images (an integer), for images that do not
              provide this meta information. For changing the resolution using CSS, see: <xref
                href="ch_image_resolution.dita"/>.</dd>
          <dd>
            <codeblock outputclass="language-ini">-image-resolution 72</codeblock>
          </dd>
        </dlentry>
        <dlentry>
          <dt>-http-proxy-host</dt>
          <dd>The HTTP proxy host.</dd>
        </dlentry>
        <dlentry>
          <dt>-http-proxy-port</dt>
          <dd>The HTTP proxy
            port.<codeblock outputclass="language-ini">-http-proxy-host my.proxy.server -http-proxy-port 3128</codeblock></dd>
        </dlentry>
        <dlentry>
          <dt>-dump-styled-content</dt>
          <dd>Dumps the intermediate style annotated XML file next to the output. Use this for
            debugging purposes.</dd>
        </dlentry>
        <dlentry>
          <dt>-dump-fo</dt>
          <dd>Dumps the FO file before converting it to PDF.</dd>
        </dlentry>
        <dlentry>
          <dt>-show-pdf</dt>
          <dd>Opens the created PDF file in the default application (Windows only).</dd>
        </dlentry>
        <dlentry>
          <dt>-pdf-ua</dt>
          <dd>Produces output that conforms to PDF/UA-1 accessibility standards. Conversion will
              break if fonts are not embedded. See: <xref href="ch_accessibility.dita"/>.</dd>
        </dlentry>
        <dlentry id="no-rtl-mirroring">
          <dt>-no-rtl-mirroring</dt>
          <dd>Disables switching of left and right margins, padding and borders for right-to-left content. To make stylesheet development easier, the left margin automatically becomes the right margin when the paragraph has an RTL orientation.</dd>
        </dlentry>
          <dlentry>
            <dt>-no-network</dt>
            <dd>Denies access to all your network connections. If your XML document or CSS files
              reference remote resources, the transformation will fail.</dd>
          </dlentry>
        <dlentry>
          <dt>-fonts-dir</dt>
          <dd>The directory with additional fonts. The TTF files should be placed directly in it (no
              subdirectory).</dd>
        </dlentry>
        <dlentry>
          <dt>-log4j-file</dt>
          <dd>Full path to a <xref
                href="https://logging.apache.org/log4j/2.x/manual/configuration.html#Properties"
                format="html" scope="external">log4j configuration file</xref>. Example of
              configuration
              file:<codeblock outputclass="language-ini">log4j.rootCategory=info, R

log4j.category.com.oxygenxml.chemistry.stages=info
log4j.category.org.apache.fop.fonts.autodetect.FontFileFinder=info
log4j.category.org.apache.fop.apps.FopConfParser=error

# R is the standard output
log4j.appender.R=org.apache.log4j.ConsoleAppender
log4j.appender.R.layout=org.apache.log4j.PatternLayout
log4j.appender.R.layout.ConversionPattern=%r %p [ %t ] %c - %m%n</codeblock></dd>
        </dlentry>
        <dlentry id="enable-latin-ligatures">
          <dt>-enable-latin-ligatures</dt>
          <dd>Used to enable ligatures between some of the characters from the Latin glyph range.
              The character sequences that might be combined is highly dependent on the font, but
              usually they are: "fi", "fl", "tt". <note type="warning">Take special care, the
                combined characters might not be searchable in PDF readers (for instance, the
                sequence "fi" from the word "file" can be replaced by a single character and the
                word will not be found when searching). Use this only when you intend to print on
                physical media, (such as paper). Ligatures for non-Latin scripts, (such as Arabic)
                are enabled by default, and do not cause search problems.</note></dd>
        </dlentry>
          <dlentry id="xmx-command">
            <dt id="dt_gry_yhz_2bb">-Xmx&lt;NNN>m</dt>
            <dd>Used to specify the maximum amount of memory that is available to the <ph
                keyref="product"/> process. For example, to allow the process to use 1GB of
              memory:<codeblock outputclass="language-ini">-Xmx1024m</codeblock></dd>
            <dd>
              <note>The default is 512MB.</note>
              <note>Larger memory settings (beyond 1GB) is permitted only when the Java Virtual
                Machine that runs <ph keyref="product"/> is 64 bits and there is enough physical
                memory accessible to the operating system.</note>
              <note importance="high">If the <codeph>JAVA_ARG_LINE</codeph> environment variable is
                set, this parameter is ignored.</note>
            </dd>
          </dlentry>
      </dl>
     </p>
    </section>
  </body>
</topic>
