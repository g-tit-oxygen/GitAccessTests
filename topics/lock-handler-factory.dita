<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE concept
  PUBLIC "-//OASIS//DTD DITA Concept//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/concept.dtd">
<concept id="lock-handler-factory">
  <title>Lock Handler Plugin Extension</title>
  <shortdesc>This type of <xref keyref="glossentry_plugin"><term>plugin extension</term></xref> is
    used for locking resources from a specific protocol.</shortdesc>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Plugin extensions<indexterm>Lock Handler</indexterm></indexterm>
        <indexterm>Lock Handler plugin extension</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <conbody>
    <p>It provides the following API:</p>
    <ul>
      <li>
        <p><b><i>LockHandlerFactoryPluginExtension</i> interface</b>:</p>
        <p>You need to implement the following two methods:</p>
        <ul>
          <li><i>LockHandler getLockHandler()</i>
            <p>Gets the lock handler for the current handled protocol. Might be
                <codeph>null</codeph> if not supported.</p></li>
          <li><i>boolean isLockingSupported(String protocol)</i><p>Checks if a lock
              handler can be provided for a specific protocol.</p></li>
        </ul>
        <p>To use this type of extension in your <term>plugin</term>, create an extension of
            <i>LockHandlerFactory</i> type in your <codeph>plugin.xml</codeph> file and
          specify the class implementing <i>LockHandlerFactoryPluginExtension</i>:</p>
        <codeblock outputclass="language-xml">&lt;?xml version="1.0" encoding="UTF-8"?>
&lt;!DOCTYPE plugin SYSTEM "../plugin.dtd">
&lt;plugin name="CustomLockHandler" ..............>
 &lt;runtime>
  ........
 &lt;/runtime>
 
 &lt;extension type="LockHandlerFactory"
         class="LockHandlerFactoryPluginExtensionImpl"/>
 ...............
  
&lt;/plugin>
</codeblock>
      </li>
    </ul>
  </conbody>
</concept>
