<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA Task//EN" "task.dtd">
<task id="whr-add-tweet-button">
  <title>How to Add Tweet Button in WebHelp Responsive Output</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>WebHelp Responsive system<indexterm>Add Tweet widget</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <taskbody>
    <context>
      <p>To add a <tm tmtype="tm" trademark="tm">Twitter</tm>
        <i>Tweet</i> widget to your WebHelp Responsive output, follow these steps:</p>
    </context>
    <steps>
      <step>
        <cmd>Go to the <xref href="https://publish.twitter.com" format="html"
            scope="external">Tweet button generator</xref> page.</cmd>
      </step>
      <step>
        <cmd>Fill-in the displayed form.</cmd>
        <stepresult>The <uicontrol>Preview and code</uicontrol> area displays the code.</stepresult>
      </step>
      <step>
        <cmd>Copy the code snippet displayed in the <uicontrol>Preview and code</uicontrol> area and
          paste it into a <codeph>div</codeph> element inside an XML file called
            <filepath>tweet-button.xml</filepath>.</cmd>
        <info>Make sure you follow these rules:<ul id="ul_y3s_cf5_ds">
            <li>The file must be well-formed.</li>
            <li>The code for each <codeph>script</codeph> element must be included in an XML
              comment.</li>
            <li>The start and end tags for the XML comment must be on a separate line.</li>
          </ul>The content of the XML file should look like
          this:<codeblock outputclass="language-javascript">&lt;div id="twitter">
  &lt;a href="https://twitter.com/share" class="twitter-share-button">Tweet&lt;/a>
  &lt;script>
    &lt;!-- 
      !function (d, s, id) {
      var
      js, fjs = d.getElementsByTagName(s)[0], p = /^http:/.test(d.location)
 ? 'http': 'https';
      if (! d.getElementById(id)) {
      js = d.createElement(s);
      js.id = id;
      js.src = p + '://platform.twitter.com/widgets.js';
      fjs.parentNode.insertBefore(js, fjs);
      }
      }
      (document,
      'script', 'twitter-wjs');
     -->
  &lt;/script>
&lt;/div></codeblock></info>
      </step>
      <step>
        <cmd>In <ph keyref="product"/>, click the <uicontrol><image
              href="../img/TransformConfig16.png" id="image_obc_2wv_sr"/> Configure Transformation
            Scenario(s)</uicontrol> action from the toolbar<ph product="author developer editor">
            (or the <menucascade>
              <uicontrol>Document</uicontrol>
              <uicontrol>Transformation</uicontrol>
            </menucascade> menu</ph>.</cmd>
      </step>
      <step>
        <cmd>Select an existing WebHelp Responsive transformation scenario (depending on your needs,
          it may be with or without feedback) and click the <uicontrol>Duplicate</uicontrol> button
          to open the <uicontrol>Edit Scenario</uicontrol> dialog box.</cmd>
      </step>
      <step>
        <cmd>Switch to the <uicontrol>Parameters</uicontrol> tab. Depending on where you want to
          display the button, edit <xref
            href="webhelp_responsive_customization.dita#webhelp_responsive_customization/section_placeholders_usage"
            >one of the parameters that begin with <i>webhelp.fragment</i></xref>. Set
          that parameter to reference the <filepath>tweet-button.xml</filepath> file that you
          created earlier.</cmd>
      </step>
      <step>
        <cmd>Click <uicontrol>Ok</uicontrol>.</cmd>
      </step>
      <step>
        <cmd>Run the transformation scenario.</cmd>
      </step>
    </steps>
  </taskbody>
  <related-links>
    <linklist><title>Related Information:</title><link href="dita_webhelp_output.dita#dita_webhelp_output"/></linklist>
  </related-links>
</task>
