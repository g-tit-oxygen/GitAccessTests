<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic
  PUBLIC "-//OASIS//DTD DITA Topic//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/topic.dtd">
<topic id="dg-java-api">
  <title>Java API - Extending Author Functionality through Java</title>
  <body>
    <p><ph keyref="product"/>
      <uicontrol>Author</uicontrol> mode has a built-in set of operations covering the insertion of
      text and XML fragments (see the <xref
        href="dg-default-author-operations.dita#dg-default-author-operations">Author Default
        Operations</xref>) and the execution of XPath expressions on the current document edited in
        <uicontrol>Author</uicontrol> mode. However, there are situations in which you need to
      extend this set. The following examples are just a few of the possible situations:<ul
        id="ul_ew3_fh3_ns">
        <li>You need to enter an element whose attributes will be edited by the user through a
          graphical user interface.</li>
        <li>The user must send selected element content (or the whole document) to a server for some
          kind of processing.</li>
        <li>Content authors need to extract pieces of information from a server and insert it
          directly into the edited XML document.</li>
        <li>You need to apply an XPath expression on the current document and process the nodes of
          the resulting node set.</li>
      </ul></p>
    <p>To extend the <ph keyref="product"/>
      <uicontrol>Author</uicontrol> mode functionality through Java, you will need the <xref
        href="https://www.oxygenxml.com/oxygen_sdk.html" scope="external" format="html">Oxygen
        SDK</xref> available <xref href="https://www.oxygenxml.com/developer.html" scope="external"
        format="html">on the <ph keyref="product"/> website</xref>. It includes the source code of
      the <uicontrol>Author</uicontrol> mode operations in the predefined document types and the
      full documentation (in Javadoc format) of the public API available for
        <uicontrol>Author</uicontrol> mode custom actions.</p>
    <p>The subsequent Java examples make use of AWT classes. If you are developing extensions for
      the <ph keyref="product"/> XML Editor plugin for Eclipse, you will have to use their SWT
      counterparts.</p>
    <note type="attention">Make sure the Java classes of your custom <uicontrol>Author</uicontrol>
      mode operations are compiled with the same Java version used by <ph keyref="product"/>.
      Otherwise, the classes may not be loaded by the Java virtual machine. For example, if you run
        <ph keyref="product"/> with a Java 1.6 virtual machine but the Java classes of your custom
        <uicontrol>Author</uicontrol> mode operations are compiled with a Java 1.7 virtual machine
      then the custom operations cannot be loaded and used by the Java 1.6 virtual machine. </note>
  </body>
  <related-links>
    <linklist><title>Related Information:</title><link format="html" href="https://www.oxygenxml.com/InstData/Editor/SDK/javadoc/ro/sync/ecss/extensions/api/AuthorOperation.html" scope="external"/></linklist>
  </related-links>
</topic>
