<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="customizing_frameworks">
  <title>Integrating Web Author with Your Content by Creating Custom Frameworks</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Customizing your content for Web Author</indexterm>
        <indexterm>Customizing frameworks for Web Author</indexterm>
        <indexterm>Customizing document types for Web Author</indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p>You can customize Web Author to make it simple for everyone to write structured content and
      still adhere to your project conventions. This topic provides details about reusing frameworks
      between the standalone versions of Oxygen and Web Author, how to create customized frameworks,
      how to test and upload your customization, and other framework customization tips.</p>
    <section id="section_jqs_3sf_11b">
      <title>Examples of Framework Customization Use-Cases</title>
      <p>
        <dl>
          <dlentry>
            <dt>Document Schema</dt>
            <dd>Web Author supports any XML schema in any schema language. It also offers <xref
                href="webauthor-predefined-frameworks.dita#webauthor-predefined-frameworks">built-in
                support for DITA, DocBook, TEI and XHTML</xref>.</dd>
          </dlentry>
          <dlentry>
            <dt>Add Support for a New XML Vocabulary</dt>
            <dd>You can customize Web Author to work with any XML-based document type. For example,
              you can customize Web Author to work with a <xref
                href="https://www.oxygenxml.com/doc/ug-editor/topics/dita-specialization-support.html"
                format="html" scope="external">DITA specialization</xref>.</dd>
          </dlentry>
          <dlentry>
            <dt>Authoring Experience</dt>
            <dd>You can configure how documents are rendered in Web Author or display <xref
                href="dg-form-controls-properties-matrix.dita#dg-form-controls-properties-matrix"
                >inline form-controls</xref> to allow users to edit attribute values.</dd>
          </dlentry>
          <dlentry>
            <dt>Business Rules</dt>
            <dd>You can configure the automatic validation to use Schematron to enforce various
              business rules and propose solutions for them. For more information, see the <xref
                href="https://www.oxygenxml.com/doc/ug-editor/topics/schematron-quick-fixes.html"
                format="html" scope="external">Schematron Quick Fixes (SQF) section in the Oxygen
                XML Editor User Manual</xref>. There is also an interesting Blogpost written on this
              subject available at: <xref
                href="http://blog.oxygenxml.com/2015/05/schematron-checks-to-help-technical.html"
                format="html" scope="external"/>.</dd>
          </dlentry>
          <dlentry>
            <dt>File Templates</dt>
            <dd>You can <xref href="#customizing_frameworks/new-templates-li" format="dita">specify
                document templates</xref> that users can choose from when creating a new
              document.</dd>
          </dlentry>
          <dlentry>
            <dt>Embedded Formats</dt>
            <dd>Web Author supports embedded formats such as MathML, SVG, videos, and others using
                <xref href="customizing_plugins.dita#customizing_plugins">plugins</xref> or <xref
                href="dg-form-controls-properties-matrix.dita#dg-form-controls-properties-matrix"
                >flexible form-controls</xref>. Also, support for embedded formats can be
              implemented by third parties. For example, <xref
                href="http://www.wiris.com/en/plugins/docs/oxygen" format="html" scope="external"
                >WIRIS provides a plugin</xref> that can be used to edit MathML equations in a
              visual way.</dd>
          </dlentry>
        </dl>
      </p>
    </section>
    <section id="reusing_frameworks_between_and_web_author">
      <title>Reusing Frameworks Between Oxygen XML Editor/Author and Web Author</title>
      <p>Custom <xref keyref="glossentry_framework"><term>frameworks</term></xref> that are designed
        for documentation purposes can be reused interchangeably between Oxygen standalone
        distributions and the <ph keyref="webappProduct"/>. However, some fine-tuning might be
        necessary to maximize the editing experience for your content authors. The advantages of
        using a common <term>framework</term> include:<ul id="ul_rlf_yvy_1r">
          <li>Uniform experience across multiple Oxygen XML Editor/Author distributions.</li>
          <li>Ability to reuse previously developed <term>frameworks</term>.</li>
          <li>Many of the customized items that are added to your <term>framework</term> in the
            Oxygen XML Editor/Author standalone distribution also carry over to <ph
              keyref="webappProduct"/>. For example, items that are added to the list of proposals
            for the <xref keyref="glossentry_content-completion-assistant"><term>Content Completion
                Assistant</term></xref> will appear in both distributions.</li>
        </ul></p>
    </section>
    <section id="section_zzf_pns_vz">
      <title>How to Create a Customized Framework (Document Type)</title>
      <p>You can create a custom <term>framework</term> by extending an existing one: </p>
      <p>
        <ol>
          <li>In a location where you have full write access, create a folder structure similar to
            this: <filepath>custom_frameworks/dita-extension</filepath>. </li>
          <li>Open a standalone version of Oxygen XML Editor/Author.</li>
          <li>Open the <uicontrol>Preferences</uicontrol> dialog box <menucascade>
              <uicontrol>(Options</uicontrol>
              <uicontrol>Preferences)</uicontrol>
            </menucascade> and go to <menucascade>
              <uicontrol>Document Type Association</uicontrol>
              <uicontrol>Locations</uicontrol>
            </menucascade>. In this preferences page, add the path to your
              <filepath>custom_frameworks</filepath> folder in the <uicontrol>Additional frameworks
              directories</uicontrol> list.</li>
          <li>Go to the <uicontrol>Document Type Association</uicontrol> preferences page and select
            an existing <term>framework</term> configuration and use the
              <uicontrol>Extend</uicontrol> button to create an extension for it.</li>
          <li>Give the extension an appropriate name (for example, <b><i>DITA - Custom</i></b>),
            select <uicontrol>External</uicontrol> for the <uicontrol>Storage</uicontrol> option,
            and specify an appropriate path (for example,
              <filepath>path/to/.../custom_frameworks/dita-extension/dita-extension.framework</filepath>).</li>
          <li id="make-changes-li">Make your changes to the extension. There is a large variety of
            ways to customize your extended <term>framework</term>. These are just some of the ways:<ul>
              <li>The <xref
                  href="https://www.oxygenxml.com/doc/ug-editor/topics/the-document-type-dialog.html"
                  format="html" scope="external"><uicontrol>Document Type</uicontrol> configuration
                  dialog box</xref> contains various tabs and subtabs that allow you to configure
                the extended <term>framework</term>.</li>
              <li id="new-templates-li">You can <xref
                  href="https://www.oxygenxml.com/doc/ug-editor/topics/create-your-own-templates.html"
                  format="html" scope="external">create your own custom document templates</xref>
                and once the framework is uploaded to Web Author, users will have access to the
                templates when creating a new document.</li>
              <li>See the <xref
                  href="https://www.oxygenxml.com/doc/ug-editor/topics/dg-complex-customization-tutorial.html"
                  format="html" scope="external">Oxygen Advanced Framework Customization
                  section</xref> for numerous procedures and examples of how to configure various
                aspects of the extended <term>framework</term>.</li>
              <li>For information about using CSS files to configure the extended
                  <term>framework</term>, see <xref
                  href="https://www.oxygenxml.com/doc/ug-editor/topics/dg-customize-default-CSS.html"
                  format="html" scope="external">Customizing the Main CSS of a
                Framework</xref>.</li>
              <li>For information about configuring the Content Completion proposals for the
                extended <term>framework</term>, see <xref
                  href="wa-cc-configuration.dita#wa-cc-configuration"/>.</li>
            </ul></li>
          <li>Click <uicontrol>OK</uicontrol> to close the dialog box and then
              <uicontrol>OK</uicontrol> or <uicontrol>Apply</uicontrol> to save the changes.</li>
          <li>Create an archive that only contains your custom framework folder that you created in
            the first step of this procedure. The archive should contain exactly one folder (for
            example, <codeph>dita-extension</codeph>). You will need this archive structure to <xref
              href="#customizing_frameworks/deploying_a_framework" format="dita">upload the
                <term>framework</term> to Web Author</xref>.</li>
        </ol>
      </p>
    </section>
    <section id="developing_and_testing_a_framework_using_the_weba">
      <title>Testing a Custom Framework Using the Oxygen XML Web Author Test Server Add-on</title>
      <p>The following procedures assumes that you have access to an Oxygen XML Editor/Author
        standalone installation. This is not a mandatory requirement, but rather a way to speed up
        the development process.</p>
      <p>
        <ol id="ol_g2c_pnz_1r">
          <li>Use the standalone installation of Oxygen XML Editor/Author to <xref
              href="#customizing_frameworks/section_zzf_pns_vz" format="dita">customize a specific
                <term>framework</term></xref>.</li>
          <li>Install the <uicontrol>Oxygen Web Author Test Server</uicontrol> add-on.<ol>
              <li>Go to <menucascade>
                  <uicontrol>Help</uicontrol>
                  <uicontrol>Install new add-ons</uicontrol>
                </menucascade> to open an add-on selection dialog box.</li>
              <li>In the <uicontrol>Show add-ons from</uicontrol> text box, enter the following url:
                  <b>http://www.oxygenxml.com/InstData/Addons/optional/updateSite.xml</b>.</li>
              <li>Select the <b>Oxygen Web Author Test Server</b> add-on and click
                  <uicontrol>Next</uicontrol>.</li>
              <li>Select the <b>I accept all terms of the end user license agreement</b> option and
                click <uicontrol>Finish</uicontrol>.</li>
              <li>Restart the application.<p><b>Result:</b> You should now have a <uicontrol>Start
                    Web Author Server</uicontrol> button on the toolbar.</p></li>
            </ol></li>
          <li>Open an XML file in Oxygen XML Editor/Author.<note type="note">The <b>Web Author Test
                Server</b> does not load <term>frameworks</term> that have the
                <uicontrol>Storage</uicontrol> option set to <uicontrol>Internal</uicontrol> in the
                <xref
                href="https://www.oxygenxml.com/doc/ug-editor/topics/the-document-type-dialog.html"
                format="html" scope="external"><uicontrol>Document Type</uicontrol> configuration
                dialog box</xref>. Therefore, the XML file needs to be from a <term>framework</term>
              that has that option set to <uicontrol>External</uicontrol>.</note></li>
          <li>Click the <uicontrol>Start Web Author Server</uicontrol> button found on the toolbar.
            This starts a Tomcat server and opens a file chooser dialog box:<p>
              <fig>
                <title>Web Author Test Server File Chooser Dialog Box</title>
                <image href="../img/wa_test_server_dialog1.png"/>
              </fig>
            </p>The dialog box shows a URL entry for up to two network interfaces that are available
            on your desktop PC. The Tomcat server accesses the <term>frameworks</term> and options
            currently in use by Oxygen XML Editor/Author.</li>
          <li>Open the XML document with one of the following methods:<ul>
              <li><b>Mobile Device</b> - To open the current document in your mobile device, click
                the <uicontrol>QR Code</uicontrol> button next to one of the network interface
                listings and use a QR code reader on your mobile device.</li>
              <li><b>Desktop Browser</b> - To open the current document in your desktop browser,
                click the <uicontrol>Open in Browser</uicontrol> button next to one of the network
                interface listings.</li>
            </ul></li>
          <li><xref href="#customizing_frameworks/make-changes-li" format="dita">Make whatever
              changes you want to your <term>framework</term></xref>. Note that these changes will
            not automatically be reflected in the <ph keyref="webappProduct"/> if it was already
            running. To see the results of changes, close the server using the <b>Close and stop
              server</b> button in the file chooser dialog box and start it again.</li>
        </ol>
      </p>
      <p>
        <note type="attention">When using this test server add-on, editing sessions have a limited
          duration. If the session stops working, click the <b>Close and stop server</b> button in
          the file chooser dialog box and start it again.</note>
      </p>
    </section>
    <section id="deploying_a_framework">
      <title>Uploading a Custom Framework to Web Author</title>
      <p>To upload a custom <term>framework</term> to your Web Author deployment, follow this
          procedure:<ol conkeyref="reusables-sdk-webauthor/upload-framework-ol">
          <li/>
        </ol></p>
    </section>
    <section id="customization_tips">
      <title>Other Customization Tips</title>
      <p>
        <ul id="ol_css_3h1_br">
          <li>If you want to use CSS rules that only apply when the <term>framework</term> is used
            in the <ph keyref="webappProduct"/>, use the following <codeph>media</codeph>
            query:<codeblock outputclass="language-css">@media oxygen AND (platform:webapp) {
 ... 
}</codeblock></li>
          <li>In the <filepath>web</filepath> folder of each <term>framework</term>, you can add a
              <filepath>framework.js</filepath> file that calls the JavaScript API to implement
            custom editing actions. The possible use cases include the following:<ul>
              <li>Create custom actions and add them to the toolbar or contextual menu. For more
                details, see the <xref keyref="jscript_api_customaction">JS custom action
                  tutorial</xref>.</li>
              <li>Create custom form controls. For more details, see the <xref
                  keyref="jscript_api_formcontrol">JS form control tutorial</xref>.</li>
              <li>Add more views. For more details, see the <xref keyref="jscript_api_customview">JS
                  custom view tutorial</xref>.</li>
            </ul></li>
          <li>If the <term>framework</term> contains <uicontrol>Author</uicontrol> mode operations
            (Java implementations of the
              <codeph>ro.sync.ecss.extensions.api.AuthorOperation</codeph> interface), they can be
            enabled to be used by the <ph keyref="webappProduct"/> using the
              <codeph>ro.sync.ecss.extensions.api.WebappCompatible</codeph>
                annotation.<note><uicontrol>Author</uicontrol> mode operations that use <term>Java
                Swing</term> components to display a graphical interface are not compatible with the
                <ph keyref="webappProduct"/> and they should not be annotated.</note></li>
          <li>The <ph keyref="webappProduct"/> continuously validates the XML documents using the
            default validation scenarios defined at <term>framework</term> level. Only the
            validation units that have the <xref
              href="https://www.oxygenxml.com/doc/ug-editor/topics/edit-validation-scenario.html#edit-validation-scenario__validation-config-dialog"
              format="html" scope="external"><uicontrol>Automatic Validation</uicontrol> option
              selected in the <uicontrol>Edit Scenario</uicontrol> dialog box</xref> that is
            accessed by editing a scenario in the <xref
              href="https://www.oxygenxml.com/doc/ug-editor/topics/document-type-validation-tab.html"
              format="html" scope="external"><uicontrol>Validation</uicontrol> subtab when editing a
              document type</xref>.</li>
        </ul>
      </p>
    </section>
  </body>
</topic>
